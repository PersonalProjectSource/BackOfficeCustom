{% extends 'AppAdminBundle:Layout:admin_layout.html.twig' %}
{% block body %}
          <section class="site-min-height">
              <!-- page start-->
              <section class="panel">
                  <header class="panel-heading">
                      Réponses aux questions
                  </header>
                  <div class="panel-body">
                      <div class="adv-table editable-table">


                          <div class="space15"></div>
                          <table class="display table table-striped table-hover table-bordered" id="hidden-table-info">
                              <thead>
                              <tr>
                                 <th>id</th>
                                 <th>Nom</th>
                                 <th>Prénom</th>
                                 <th>E-mail</th>
                                 <th>Réponses</th>
                              </tr>
                              </thead>
                              <tbody>
                              {% for t in tab %}
                                 <tr>
                                     <td class="center"><a href="{{ path('user_show2', { 'id': t.user.id }) }}">{{ t.user.id }}</a></td>
                                     <td>{{ t.user.nom }}</td>
                                     <td>{{ t.user.prenom }}</td>
                                     <td>{{ t.user.email }}</td>
                                     <td>

                                        {% for key,reponse in t.reponses %}
                                         <div class="col-lg-12">
                                             <section class="panel">
                                                <div class="bio-graph-heading">
                                                    {{ key }} - {{ reponse.libelle }}<br>
                                                </div>
                                                <div class="panel-body bio-graph-info">
                                         {% if reponse.value is defined %}

                                             {% for val in reponse.value %}
                                                  - {{ val }} <br>
                                             {% endfor %}
                                         {% endif %}
                                                 </div>
                                             </section>
                                         </div>
                                        {% endfor %}

                                     </td>
                                 </tr>
                              {% endfor %}
                              </tbody>
                          </table>
                      </div>
                  </div>
              </section>
              <!-- page end-->
          </section>
{% endblock %}




{% block javascripts %}
{{ parent() }}


    <script type="text/javascript">
        /* Formating function for row details */
        function fnFormatDetails ( oTable, nTr )
        {
            var aData = oTable.fnGetData( nTr );
            var sOut = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
            sOut += '<tr><td>'+aData[5]+'</td></tr>';
            sOut += '</table>';

            return sOut;
        }

        $(document).ready(function() {

            /*
             * Insert a 'details' column to the table
             */
            var nCloneTh = document.createElement( 'th' );
            var nCloneTd = document.createElement( 'td' );
            nCloneTd.innerHTML = '<img src="{{ asset('bundles/appadmin/js/assets/advanced-datatable/examples/examples_support/details_open.png') }}">';
            nCloneTd.className = "center";

            $('#hidden-table-info thead tr').each( function () {
                this.insertBefore( nCloneTh, this.childNodes[0] );
            } );

            $('#hidden-table-info tbody tr').each( function () {
                this.insertBefore(  nCloneTd.cloneNode( true ), this.childNodes[0] );
            } );

            /*
             * Initialse DataTables, with no sorting on the 'details' column
             */

            var oTable = $('#hidden-table-info').dataTable({
                "aLengthMenu": [
                    [6, 15, 20, 50, 100, -1],
                    [6, 15, 20, 50, 100, "Tous"] // change per page values here
                ],
                // set the initial value
                "iDisplayLength": 6,
                "sDom": "<'row'<'col-lg-6'l><'col-lg-6'f>r>t<'row'<'col-lg-6'i><'col-lg-6'p>>",
                "sPaginationType": "bootstrap",
                "oLanguage": {
                    "sProcessing":     "Traitement en cours...",
                    "sSearch":         "Rechercher&nbsp;:",
                    "sLengthMenu":     "Afficher _MENU_ &eacute;l&eacute;ments",
                    "sInfo":           "Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
                    "sInfoEmpty":      "Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments",
                    "sInfoFiltered":   "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
                    "sInfoPostFix":    "",
                    "sLoadingRecords": "Chargement en cours...",
                    "sZeroRecords":    "Aucun &eacute;l&eacute;ment &agrave; afficher",
                    "sEmptyTable":     "Aucune donnée disponible dans le tableau",
                    "oPaginate": {
                        "sFirst":      "Premier",
                        "sPrevious":   "Pr&eacute;c&eacute;dent",
                        "sNext":       "Suivant",
                        "sLast":       "Dernier"
                    },
                    "oAria": {
                        "sSortAscending":  ": activer pour trier la colonne par ordre croissant",
                        "sSortDescending": ": activer pour trier la colonne par ordre décroissant"
                    }
                },
                "aoColumnDefs": [
                    { "bSortable": false, "aTargets": [ 0 ] },
                    { "aTargets" : [ 5 ], "bVisible": false}
                ],
                "aaSorting": [[1, 'asc']]
            });

            /* Add event listener for opening and closing details
             * Note that the indicator for showing which row is open is not controlled by DataTables,
             * rather it is done here
             */
            $('#hidden-table-info tbody td img').live('click', function () {
                var nTr = $(this).parents('tr')[0];
                if ( oTable.fnIsOpen(nTr) )
                {
                    /* This row is already open - close it */
                    this.src = "{{ asset('bundles/appadmin/js/assets/advanced-datatable/examples/examples_support/details_open.png') }}";
                    oTable.fnClose( nTr );
                }
                else
                {
                    /* Open this row */
                    this.src = "{{ asset('bundles/appadmin/js/assets/advanced-datatable/examples/examples_support/details_close.png') }}";
                    oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' );
                }
            } );
        });
    </script>
{% endblock %}   